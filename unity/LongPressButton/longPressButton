using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;

public class LongPress : MonoBehaviour, IPointerDownHandler, IDragHandler, IPointerUpHandler
{
    public UnityEvent OnClick, OnLongPressDrag, OnLongPress, EndLongPress;
    bool isLongPressed;

    private void Awake() //먼저 이벤트들을 만들어 준다 우린 button 안쓸꺼임
    {
        OnClick = new UnityEvent();
        OnLongPress = new UnityEvent();
        EndLongPress = new UnityEvent();
        OnLongPressDrag = new UnityEvent();
    }
    public void OnPointerDown(PointerEventData e)
    {
        CancelInvoke("startEditmode");
        Invoke("startEditmode", 0.4f); //카드에딧모드를 여기서 시작하려고 준비
    }
    public void OnDrag(PointerEventData e)
    {
        if (!isLongPressed)
        {
            if (Mathf.Abs(e.pressPosition.x - e.position.x) > 10 || Mathf.Abs(e.pressPosition.y - e.position.y) > 10)
            {
                CancelInvoke("startEditmode"); //근데 일정영역이상 움직이면 취소되버림
            }
        }
        else
        {
            OnLongPressDrag.Invoke();
        }
    }
    public void OnPointerUp(PointerEventData e)
    {
        if (!isLongPressed)
        {
            CancelInvoke("startEditmode");
            if (Mathf.Abs(e.pressPosition.x - e.position.x) < 10 && Mathf.Abs(e.pressPosition.y - e.position.y) < 10) //손가락을 땠을 때 이동 거리가 x,y축으로 둘다 10 미만이라면 클릭으로 인식
            {
                OnClick.Invoke();
            }
        }
        if (isLongPressed)
        {
            endEditMode();
        }
    }
    void startEditmode() //에딧모드 시작하기 하면서 롱프레스 이벤트 쏴주는 역할
    {
        isLongPressed = true;
        OnLongPress.Invoke();
    }
    void endEditMode() // 롱프레스 끝났다는걸 쏴주는 역할
    {
        isLongPressed = false;
        EndLongPress.Invoke();
    }
}
